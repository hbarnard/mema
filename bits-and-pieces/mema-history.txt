    1  history -w
    2  history -w
    3  sudo shutdown now
    4  sudo halt
    5  sudo apt install sshfs
    6  mv /home/pi/.mycroft_cli.conf /home/pi/.config/mycroft/mycroft_cli.conf
    7  sudo raspi-config
    8  sudo i2cdetect -y 1
    9  sudo pip3 install --upgrade adafruit-python-shell
   10  python
   11  pip3
   12  sudo pip3 install --upgrade adafruit-python-shell
   13  pip3 install --upgrade adafruit-python-shell
   14  wget https://raw.githubusercontent.com/adafruit/Raspberry-Pi-Installer-Scripts/master/raspi-blinka.py
   15  ls
   16  sudo python3 raspi-blinka.py
   17  sudo pip3 install adafruit-python-shell
   18  sudo su
   19  sudo python3 raspi-blinka.py
   20  pip3 install adafruit-python-shell
   21  python3 raspi-blinka.py
   22  sudo python3 raspi-blinka.py
   23  sudo su
   24  sudo python3 raspi-blinka.py
   25  sudo apt-get update
   26  sudo su
   27  ls
   28  sudo python3 raspi-blinka.py
   29  sudo pip3 install --upgrade adafruit-circuitpython-dotstar adafruit-circuitpython-motor adafruit-circuitpython-bmp280
   30  sudo i2cdetect -y 1
   31  uname -r
   32  sudo apt-get install -y git
   33  git clone https://github.com/HinTak/seeed-voicecard
   34  cd seeed-voicecard
   35  git checkout v5.9
   36  sudo ./install.sh
   37  sudo reboot
   38  sudo halt
   39  sudo aplay -l
   40  alsamixer
   41  speaker-test -c2
   42  sudo arecord -f cd -Dhw:2 | aplay -Dhw:2
   43  mycroft-start audiotest
   44  aplay -Dhw:2,0 
   45  aplay -Dhw:2,0 /temp/test.wav
   46  arecord -d 10 test.wav
   47  ls -al
   48  aplay test.wav
   49  mycroft
   50  mycroft-config
   51  mycroft-config show
   52  mycroft-config show default
   53  mycroft-config show system
   54  cat ~/.mycroft/identity/identity2.json
   55  mycroft-start audiotest -l
   56  mv /home/pi/.mycroft/mycroft.conf /home/pi/.config/mycroft/mycroft.conf
   57  mycroft-config set listener.device_name "seeed-2mic-voicecard: bcm2835-i2s-wm8960-hifi wm8960-hifi-0"
   58  mycroft-start
   59  mycroft-start all
   60  mycroft-start wakewordtest
   61  cat ~/.mycroft/mycroft.conf
   62  sudo reboot
   63  deactivate
   64  sudo apt install docker
   65  sudo usermod -a -G docker $USER
   66  sudo groupadd docker
   67  sudo usermod -a -G docker $USER
   68  deactivate
   69  sudo reboot
   70  docker run -d -p 12101:12101       --name rhasspy       --restart unless-stopped       -v "$HOME/.config/rhasspy/profiles:/profiles"       -v "/etc/localtime:/etc/localtime:ro"       --device /dev/snd:/dev/snd       rhasspy/rhasspy       --user-profiles /profiles       --profile en
   71  deactivate
   72  docker run -d -p 12101:12101       --name rhasspy       --restart unless-stopped       -v "$HOME/.config/rhasspy/profiles:/profiles"       -v "/etc/localtime:/etc/localtime:ro"       --device /dev/snd:/dev/snd       rhasspy/rhasspy       --user-profiles /profiles       --profile en
   73  sudo apt install docker
   74  sudo curl -sSL https://get.docker.com/ | sh
   75  docker run -d -p 12101:12101       --name rhasspy       --restart unless-stopped       -v "$HOME/.config/rhasspy/profiles:/profiles"       -v "/etc/localtime:/etc/localtime:ro"       --device /dev/snd:/dev/snd       rhasspy/rhasspy       --user-profiles /profiles       --profile en
   76  ls -al
   77  cd .profile
   78  cat .profile
   79  cd .config
   80  ls
   81  cd rhasspy
   82  ls
   83  ls -al
   84  cd profiles
   85  ls
   86  cd en
   87  ls
   88  cat profile.json
   89  cd ~
   90  ls
   91  cat porcupine_raspberry-pi.ppn
   92  clear
   93  cd .config
   94  cd rhasspy
   95  cd profiles
   96  cd en
   97  cp ~/porcupine_raspberry-pi.ppn .
   98  sudo cp ~/porcupine_raspberry-pi.ppn .
   99  ls
  100  history | grep record
  101  sudo arecord -f cd -Dhw:2 | aplay -Dhw:2
  102  arecord -d 10 test.wav
  103  ls
  104  ls -al
  105  sudo non profile.json
  106  sudo nano profile.json
  107  cp  profile.json  profile.json.sav
  108  sudo cp  profile.json  profile.json.sav
  109  sudo nano profile.json
  110  ls
  111  deactivate
  112  cd .config
  113  ls
  114  cd rhasspy
  115  cd profiles
  116  cd en
  117  sudo cp  profile.json.sav  profile.json
  118  docker list
  119  docker --help
  120  docker images
  121  docker container ls
  122  docker container stop 97d62a961d96
  123  history | grep arec
  124  sudo arecord -f cd -Dhw:2 | aplay -Dhw:2
  125  docker container prune
  126  sudo arecord -f cd -Dhw:2 | aplay -Dhw:2
  127  which mycrof-core
  128  which mycroft-core
  129  cd ~
  130  ls
  131  rm -rf ~/.mycroft
  132  rm -rf /opt/mycroft
  133  rm -rf mycroft-core
  134  sudo rm -rf /opt/mycroft
  135  rm -rf /etc/mycroft/mycroft.conf
  136  sudo rm -rf /etc/mycroft/mycroft.conf
  137  sudo reboot
  138  ls -al
  139  cat .bashrc
  140  sudo nano .bashrc
  141  sudo reboot
  142  history | grep docker
  143  docker run -d -p 12101:12101       --name rhasspy       --restart unless-stopped       -v "$HOME/.config/rhasspy/profiles:/profiles"       -v "/etc/localtime:/etc/localtime:ro"       --device /dev/snd:/dev/snd       rhasspy/rhasspy       --user-profiles /profiles       --profile en
  144  docker run -it -p 1880:1880 nodered/node-red
  145  sudo apt install node-red
  146  bash <(curl -sL https://raw.githubusercontent.com/node-red/linux-installers/master/deb/update-nodejs-and-nodered)
  147  node-red admin init
  148  node-red-start
  149  sudo raspi-config
  150  node-red-start
  151  cd /etc
  152  ls
  153  sudo nano asound.conf
  154  cd ~
  155  mkdir projects
  156  cd projects
  157  git clone https://github.com/ct-Open-Source/tuya-convert
  158  cd tuya-convert
  159  ls
  160  ./install_prereq.sh
  161  sudo apt upgrade
  162  sudo apt update
  163  sudo reboot
  164  ps -aef | grep docker
  165  docker containers ls
  166  docker stop $(docker ps -aq)
  167  ps -aef | grep docker
  168  cd projects
  169  ls
  170  cd tuya-convert
  171  ./start_flash.sh
  172  nmap
  173  sudo apt install nmap
  174  nmap -sn 10.0.0.0/24
  175  nmap -sn 192.168.4.1
  176  nmap -Pn 192.168.4.1
  177  ./start_flash.sh
  178  cd scripts
  179  ls
  180  cd projects
  181  cd tuya-convert
  182  cd scripts
  183  cd ..
  184  history | grep docker
  185  docker run -d -p 12101:12101       --name rhasspy       --restart unless-stopped       -v "$HOME/.config/rhasspy/profiles:/profiles"       -v "/etc/localtime:/etc/localtime:ro"       --device /dev/snd:/dev/snd       rhasspy/rhasspy       --user-profiles /profiles       --profile en
  186  docker start e63d3b9351a20d87d51bfb62e3741f1e5530e48a85ca1df6668fbfea90af5403
  187  docker start node-red
  188  docker run -it -p 1880:1880 nodered/node-red
  189  history | grep node-red
  190  node-red-start
  191  ls usb
  192  lsusb
  193  sudo reboot
  194  node-red-start
  195  lsusb
  196  sudo apt-get install libjpeg-dev libtiff5-dev libjasper-dev libpng12-dev libavcodec-dev libavformat-dev                           libswscale-dev libv4l-dev libxvidcore-dev libx264-dev qt4-dev-tools libatlas-base-dev
  197  pip3 install opencv-python
  198  sudo apt install python3-numpy
  199  pip3 install opencv-python
  200  sudo halt
  201  history | docker
  202  history | grep docker
  203  docker start e63d3b9351a20d87d51bfb62e3741f1e5530e48a85ca1df6668fbfea90af5403
  204  history | grep red
  205  node-red-start
  206  cd /etc/ssh
  207  ls
  208  sudo nano ssh_config
  209  sudo reboot
  210  apt install cheese
  211  sudo apt install cheese
  212  cheese
  213  sudo raspi-config
  214  cheese
  215  raspistill -o testshot.jpg
  216  ls
  217  sudo apt install tensorflow
  218  pip3 install tensorflow
  219  sudo halt
  220  history | grep "docker run"
  221  docker run -d -p 12101:12101       --name rhasspy       --restart unless-stopped       -v "$HOME/.config/rhasspy/profiles:/profiles"       -v "/etc/localtime:/etc/localtime:ro"       --device /dev/snd:/dev/snd       rhasspy/rhasspy       --user-profiles /profiles       --profile en
  222  history | grep "privilege"
  223  history | grep docker
  224  history | grep mimic
  225  sudo docker run  --privileged      -it  --restart unless-stopped      -p 59125:59125        -v "${HOME}/.local/share/mycroft/mimic3:/home/mimic3/.local/share/mycroft/mimic3"        'mycroftai/mimic3'
  226  node-red-start
  227  cd projects
  228  ls
  229  cd zsync-.0.6.2
  230  cd zsync-0.6.2
  231  ./configure
  232  make
  233  sudo make install
  234  zsync http://52.45.3.101/index.html
  235  rsync -avL --progress -e "ssh -i /home/hbarnard/amazon-ec2/keys/redhat-cclite.pem"        /var/spool/mema/*.wav \ 
  236  cd /var/spool/mema
  237  ls -al
  238  rm *wav
  239  cd /var/spool/mema
  240  ls -al
  241  rsync -avL --progress -e "ssh -i /home/hbarnard/amazon-ec2/keys/redhat-cclite.pem"        /var/spool/mema/*.wav \ 
  242  cd /etc
  243  mkdir mema
  244  sudo mkdir mema
  245  cd mema
  246  sudo nano redbee-cclite.pem
  247  rsync -avL --progress -e "ssh -i /etc/mema/redhat-cclite.pem"        /var/spool/mema/*.wav \ 
  248  sudo rsync -avL --progress -e "ssh -i /etc/mema/redhat-cclite.pem"        /var/spool/mema/*.wav \
  249  sudo rsync -avL --progress -e "ssh -i /etc/mema/redhat-cclite.pem"        /var/spool/mema/*.wav \ 
  250  sudo rsync -avL --progress -e "ssh -i /etc/mema/redhat-cclite.pem"        /var/spool/mema/*.wav \ 
  251  sudo rsync -avL --progress -e "ssh -i /etc/mema/redhat-cclite.pem" /var/spool/mema/*.wav ubuntu@52.45.3.101:/var/spool/mema/*.wav
  252  sudo pip3 install replicate
  253  export REPLICATE_API_TOKEN=ad79292f164f7d5a0f91ac4e66a7de7dde18d8e8
  254  curl -s -X POST   -d '{"version": "770db50964b436879e870139c9c1504d6326774d8acc92e6815c19b68367ec51", "input": {"audio": /var/spool/mema/OSR_us_000_0010_8k.wav"}}'   -H "Authorization: Token $REPLICATE_API_TOKEN"   -H 'Content-Type: application/json'   https://api.replicate.com/v1/predictions
  255  curl -s -X POST   -d '{"version": "770db50964b436879e870139c9c1504d6326774d8acc92e6815c19b68367ec51", "input": {"audio": "/var/spool/mema/OSR_us_000_0010_8k.wav"}}'   -H "Authorization: Token $REPLICATE_API_TOKEN"   -H 'Content-Type: application/json'   https://api.replicate.com/v1/predictions
  256  cd /var/spool/mema
  257  ls
  258  ls -al
  259  curl -s -X POST   -d '{"version": "770db50964b436879e870139c9c1504d6326774d8acc92e6815c19b68367ec51", "input": {"audio": /var/spool/mema/OSR_us_000_0010_8k.wav}}'   -H "Authorization: Token $REPLICATE_API_TOKEN"   -H 'Content-Type: application/json'   https://api.replicate.com/v1/predictions
  260  clear
  261  curl -s -X POST   -d '{"version": "770db50964b436879e870139c9c1504d6326774d8acc92e6815c19b68367ec51", "input": {"audio": "/var/spool/mema/OSR_us_000_0010_8k.wav"}}'   -H "Authorization: Token $REPLICATE_API_TOKEN"   -H 'Content-Type: application/json'   https://api.replicate.com/v1/predictions
  262  clear
  263  ls -al /var/spool/mema/OSR_us_000_0010_8k.wav
  264  curl -s -X POST   -d '{"version": "770db50964b436879e870139c9c1504d6326774d8acc92e6815c19b68367ec51", "input": {"audio": "/var/spool/mema/OSR_us_000_0010_8k.wav"}}'   -H "Authorization: Token $REPLICATE_API_TOKEN"   -H 'Content-Type: application/json'   https://api.replicate.com/v1/predictions
  265  import replicate
  266  model = replicate.models.get("openai/whisper")
  267  python
  268  ls
  269  python3
  270  sudo chmod 777 /usr/local/lib/python3.7/dist-packages/replicate/client.py
  271  python3
  272  python2
  273  sudo pip import replicate
  274  ls
  275  cd ~/projects
  276  cd mema
  277  ls
  278  mkdir replicate
  279  cd replicate
  280  chmod a+x *.py
  281  python3 client.py
  282  export REPLICATE_API_TOKEN=ad79292f164f7d5a0f91ac4e66a7de7dde18d8e8
  283  python3 client.py
  284  cat replicate.py
  285  python3 client.py
  286  ls -al
  287  python3 client.py
  288  sudo pip3 install pytest
  289  python3 client.py
  290  mv replicate.py replicate.py.sav
  291  python3 client.py
  292  clear
  293  curl -s -X POST   -d '{"version": "770db50964b436879e870139c9c1504d6326774d8acc92e6815c19b68367ec51", "input": {"audio": "/var/spool/mema/OSR_us_000_0010_8k.wav"}}'   -H "Authorization: Token $REPLICATE_API_TOKEN"   -H 'Content-Type: application/json'   https://api.replicate.com/v1/predictions
  294  ls -al /var/spool/mema/OSR_us_000_0010_8k.wav
  295  sudo apt install ffmpeg
  296  ffmpeg
  297  clear
  298  curl -s -X POST   -d '{"version": "770db50964b436879e870139c9c1504d6326774d8acc92e6815c19b68367ec51", "input": {"path": "/var/spool/mema/OSR_us_000_0010_8k.wav"}}'   -H "Authorization: Token $REPLICATE_API_TOKEN"   -H 'Content-Type: application/json'   https://api.replicate.com/v1/predictions
  299  export REPLICATE_API_TOKEN=ad79292f164f7d5a0f91ac4e66a7de7dde18d8e8
  300  curl -s -X POST   -d '{"version": "770db50964b436879e870139c9c1504d6326774d8acc92e6815c19b68367ec51", "input": {"path": "/var/spool/mema/OSR_us_000_0010_8k.wav"}}'   -H "Authorization: Token $REPLICATE_API_TOKEN"   -H 'Content-Type: application/json'   https://api.replicate.com/v1/predictions
  301  export REPLICATE_API_TOKEN=ad79292f164f7d5a0f91ac4e66a7de7dde18d8e8clear
  302  clear
  303  curl -s -X POST   -d '{"version": "770db50964b436879e870139c9c1504d6326774d8acc92e6815c19b68367ec51", "input": {"path": "/var/spool/mema/OSR_us_000_0010_8k.wav"}}'   -H "Authorization: Token ad79292f164f7d5a0f91ac4e66a7de7dde18d8e8"   -H 'Content-Type: application/json'   https://api.replicate.com/v1/predictions
  304  curl -s -X POST   -d '{"version": "770db50964b436879e870139c9c1504d6326774d8acc92e6815c19b68367ec51", "input": {"path": "/var/spool/mema/OSR_us_000_0010_8k.wav"}}'   -H "Authorization: Bearer ad79292f164f7d5a0f91ac4e66a7de7dde18d8e8"   -H 'Content-Type: application/json'   https://api.replicate.com/v1/predictions
  305  clear
  306  curl -s -X POST   -d '{"version": "770db50964b436879e870139c9c1504d6326774d8acc92e6815c19b68367ec51", "input": {"path": "/var/spool/mema/OSR_us_000_0010_8k.wav"}}'   -H "Authorization: Token ad79292f164f7d5a0f91ac4e66a7de7dde18d8e8"   -H 'Content-Type: application/json'   https://api.replicate.com/v1/predictions
  307  echo $REPLICATE_API_TOKEN
  308  export REPLICATE_API_TOKEN=ad79292f164f7d5a0f91ac4e66a7de7dde18d8e8
  309  echo $REPLICATE_API_TOKEN
  310  clear
  311  curl -s -X POST   -d '{"version": "770db50964b436879e870139c9c1504d6326774d8acc92e6815c19b68367ec51", "input": {"path": "/var/spool/mema/OSR_us_000_0010_8k.wav"}}'   -H "Authorization: Token $REPLICATE_API_TOKEN"   -H 'Content-Type: application/json'   https://api.replicate.com/v1/predictions
  312  curl -s -X POST   -d '{"version": "770db50964b436879e870139c9c1504d6326774d8acc92e6815c19b68367ec51", "input": {"path": "/var/spool/mema/OSR_us_000_0010_8k.wav"}}'   -H "Authorization: Token $REPLICATE_API_TOKEN "   -H 'Content-Type: application/json'   https://api.replicate.com/v1/predictions
  313  ./client.py
  314  python3 ./client.py
  315  python3
  316  dir(replicate)
  317  python3
  318  pip3 uninstall replicate
  319  sudo pip3 uninstall replicate
  320  pip3 uninstall replicate
  321  pip3 install replicate
  322  python3
  323  pip3 uninstall replicate
  324  pip3 update replicate
  325  pip3 upgrade replicate
  326  pip3 --help
  327  pip3 upgrade pip3
  328  pip3 list
  329  pip
  330  sudo apt install python-pip
  331  python
  332  pip install replicate
  333  python
  334  git clone https://github.com/replicate/replicate-python.git
  335  cd replicate-python
  336  ls
  337  ./setup.py
  338  chmod a+x ./setup.py
  339  ./setup.py
  340  python3 setup.py
  341  setup.py --help
  342  ./setup.py --help
  343  python ./setup.py --help
  344  mkdir build
  345  python ./setup.py install
  346  sudo python ./setup.py install
  347  python
  348  ls
  349  curl -s -X POST   -d '{"version": "770db50964b436879e870139c9c1504d6326774d8acc92e6815c19b68367ec51", "input": {"path": "/var/spool/mema/OSR_us_000_0010_8k.wav"}}'   -H "Authorization: Token $REPLICATE_API_TOKEN "   -H 'Content-Type: application/json'   https://api.replicate.com/v1/predictions
  350  echo REPLICATE_API_TOKEN
  351  echo $REPLICATE_API_TOKEN
  352  curl -s -X POST   -d '{"version": "770db50964b436879e870139c9c1504d6326774d8acc92e6815c19b68367ec51", "input": {"path": "/var/spool/mema/OSR_us_000_0010_8k.wav"}}'   -H "Authorization: Token REPLICATE_API_TOKEN "   -H 'Content-Type: application/json'   https://api.replicate.com/v1/predictions
  353  curl -s -X POST   -d '{"version": "770db50964b436879e870139c9c1504d6326774d8acc92e6815c19b68367ec51", "input": {"path": "/var/spool/mema/OSR_us_000_0010_8k.wav"}}'   -H "Authorization: Token ad79292f164f7d5a0f91ac4e66a7de7dde18d8e8 "   -H 'Content-Type: application/json'   https://api.replicate.com/v1/predictions
  354  ls -al
  355  cd ..
  356  ls
  357  ls -al
  358  python ./replicate.oy
  359  python replicate.oy
  360  ls
  361  python replicate.py
  362  python3 replicate.py
  363  python3
  364  mv replicate.py test.py
  365  python test.py
  366  clear
  367  python test.py
  368  clear
  369  python test.py
  370  sudo pip install pyaudio
  371  sudo pip install wave
  372  ls -al
  373  sudo pip install datetime
  374  sudo pip install threading
  375  python3 test.py
  376  docker list
  377  docker --help
  378  docker container ls
  379  docker stop all
  380  docker stop 9a16d851c7c8
  381  docker stop e63d3b9351a2
  382  python3 test.py
  383  cd ~/.config
  384  ls
  385  cd pulse
  386  ls
  387  ls -al
  388  rm -rf
  389  ls
  390  rm -rf *
  391  ls
  392  cd ~/projects/replicate
  393  ls
  394  python3 test.py
  395  ls
  396  mv voice_bonnet.py audiotest.py
  397  chmod a+x *.py
  398  sudo python3 audiotest.py
  399  ls -al
  400  sudo python3 audiotest.py
  401  ls -al
  402  aply myrecording.wav
  403  aplay myrecording.wav
  404  aplay
  405  clear
  406  ls -al
  407  aplay myrecording.wav
  408  aplay ./myrecording.wav
  409  sudo aplay myrecording.wav
  410  chmod a+x *.py
  411  ls
  412  python test_record.py
  413  ls -al
  414  sudo aplay demo.wav
  415  python test_record.py
  416  clear
  417  python test_record.py
  418  clear
  419  python test_record.py
  420  sudo nano /usr/share/alsa/alsa.conf
  421  sudo apt-get install libportaudio2
  422  python test_record.py
  423  aplay /var/spool/mema/demo.wav
  424  sudo aplay /var/spool/mema/demo.wav
  425  python test_record.py
  426  sudo apt install python-picamera
  427  history
  428  history > mema-history.txt
